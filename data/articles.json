{
  "articles": [
    {
      "slug": "readme",
      "title": "Untitled",
      "content": "# Test Articles Documentation\n\nこのディレクトリには、インタラクティブマインドマップポートフォリオの開発・テスト用記事が含まれています。\n\n## 記事構成\n\n### Phase 1: 基本記事セット（6記事）\n\n1. **hello.md** - 導入記事（home_display: true, importance: 4）\n2. **rust-async.md** - Rust非同期プログラミング（home_display: true, importance: 4）\n3. **tokio-basics.md** - Tokio入門（home_display: true, importance: 3）\n4. **async-patterns.md** - 非同期パターン集（home_display: false, importance: 2）\n5. **web-development.md** - Web開発基礎（home_display: true, importance: 3）\n6. **broken-link-test.md** - リンク切れテスト（home_display: false, importance: 1）\n\n## リンク関係\n\n### 相互リンク\n- rust-async ↔ tokio-basics\n- hello ↔ rust-async\n- hello ↔ web-development\n\n### 一方向リンク\n- async-patterns → rust-async\n- async-patterns → tokio-basics\n\n### 意図的なリンク切れ（テスト用）\n- broken-link-test → 存在しない記事\n\n## カテゴリ分類\n\n- **introduction**: hello\n- **programming**: rust-async, tokio-basics, async-patterns\n- **web**: web-development\n- **test**: broken-link-test\n\n## 重要度レベル\n\n- **4**: hello, rust-async（最重要、大きなノード）\n- **3**: tokio-basics, web-development（重要、中サイズノード）\n- **2**: async-patterns（普通、小サイズノード）\n- **1**: broken-link-test（最小、テスト用）\n\n## ホーム画面表示\n\nhome_display=trueの記事（4記事）がホーム画面のノードとして表示されます：\n- hello\n- rust-async\n- tokio-basics\n- web-development\n\n## タグ\n\n記事内の#タグは抽出・記録されますが、関連性計算には使用されません。\nデバッグ情報として活用されます。",
      "metadata": {
        "title": "Untitled",
        "home_display": false,
        "category": null,
        "importance": 3,
        "related_articles": [],
        "tags": [],
        "created_at": null,
        "updated_at": null,
        "author_image": null
      },
      "file_path": "articles/README.md",
      "outbound_links": [],
      "inbound_count": 0,
      "processed_at": "2025-09-18T15:54:55.400493272+00:00"
    },
    {
      "slug": "hello",
      "title": "Hello World - はじめに",
      "content": "\n# Hello World - はじめに\n\nこれはインタラクティブマインドマップポートフォリオのサンプル記事です。\n\nこのポートフォリオでは、記事間の関連性を視覚的に表現し、[[rust-async]]や[Web開発の基礎](web-development)などの技術記事を探索できます。\n\n## 特徴\n\n- 箇条書き 1: 物理演算による動的レイアウト\n- 箇条書き 2: インタラクティブなノード操作\n\n外部リンク: [Yew](https://yew.rs)",
      "metadata": {
        "title": "Hello World - はじめに",
        "home_display": true,
        "category": "introduction",
        "importance": 4,
        "related_articles": [
          "rust-async",
          "web-development"
        ],
        "tags": [
          "hello",
          "introduction",
          "portfolio"
        ],
        "created_at": "2024-01-01T00:00:00Z",
        "updated_at": "2024-01-01T00:00:00Z",
        "author_image": null
      },
      "file_path": "articles/hello.md",
      "outbound_links": [
        {
          "target_slug": "rust-async",
          "link_type": "WikiLink",
          "context": "これはインタラクティブマインドマップポートフォリオのサンプル記事です。 このポートフォリオでは、記事間の関連性を視覚的に表現し、[[rust-async]]や[Web開発の基礎](web-develo",
          "position": 222,
          "original_text": "[[rust-async]]"
        },
        {
          "target_slug": "web-development",
          "link_type": "MarkdownLink",
          "context": "これはインタラクティブマインドマップポートフォリオのサンプル記事です。 このポートフォリオでは、記事間の関連性を視覚的に表現し、[[rust-async]]や[Web開発の基礎](web-develo",
          "position": 239,
          "original_text": "[Web開発の基礎](web-development)"
        }
      ],
      "inbound_count": 2,
      "processed_at": "2025-09-18T15:54:55.401616731+00:00"
    },
    {
      "slug": "async-patterns",
      "title": "非同期パターン集",
      "content": "\n# 非同期パターン集\n\n[[rust-async]]で使える実用的なパターンを紹介します。\n\n## よく使われるパターン\n\n### 1. 並行処理パターン\n複数のタスクを同時に実行する方法。\n\n### 2. エラーハンドリングパターン\n非同期処理でのエラー処理のベストプラクティス。\n\n### 3. リソース管理パターン\n非同期コンテキストでのリソースの適切な管理。\n\nこれらのパターンは[[tokio-basics]]の知識を前提としています。",
      "metadata": {
        "title": "非同期パターン集",
        "home_display": false,
        "category": "programming",
        "importance": 2,
        "related_articles": [],
        "tags": [
          "async",
          "patterns",
          "rust"
        ],
        "created_at": "2024-01-04T00:00:00Z",
        "updated_at": "2024-01-04T00:00:00Z",
        "author_image": null
      },
      "file_path": "articles/async-patterns.md",
      "outbound_links": [
        {
          "target_slug": "rust-async",
          "link_type": "WikiLink",
          "context": "# 非同期パターン集 [[rust-async]]で使える実用的なパターンを紹介します。 ## よく使われるパターン ###",
          "position": 29,
          "original_text": "[[rust-async]]"
        },
        {
          "target_slug": "tokio-basics",
          "link_type": "WikiLink",
          "context": "### 3. リソース管理パターン 非同期コンテキストでのリソースの適切な管理。 これらのパターンは[[tokio-basics]]の知識を前提としています。",
          "position": 473,
          "original_text": "[[tokio-basics]]"
        }
      ],
      "inbound_count": 1,
      "processed_at": "2025-09-18T15:54:55.402425028+00:00"
    },
    {
      "slug": "rust-async",
      "title": "Rustでの非同期プログラミング",
      "content": "\n# Rustでの非同期プログラミング\n\nRustにおける非同期プログラミングの基礎について説明します。\n\n## 基本概念\n\n非同期プログラミングを理解するには、まず[[tokio-basics]]を理解することから始めましょう。\n実用的な[パターン集](async-patterns)も参考になります。\n\n## 主要な特徴\n\n- Future trait\n- async/await構文\n- 非同期ランタイム\n\n[[hello]]の記事でも触れましたが、非同期処理は現代のWebアプリケーション開発において重要な概念です。",
      "metadata": {
        "title": "Rustでの非同期プログラミング",
        "home_display": true,
        "category": "programming",
        "importance": 4,
        "related_articles": [
          "tokio-basics",
          "async-patterns"
        ],
        "tags": [
          "rust",
          "async",
          "programming"
        ],
        "created_at": "2024-01-02T00:00:00Z",
        "updated_at": "2024-01-02T00:00:00Z",
        "author_image": null
      },
      "file_path": "articles/rust-async.md",
      "outbound_links": [
        {
          "target_slug": "tokio-basics",
          "link_type": "WikiLink",
          "context": "Rustにおける非同期プログラミングの基礎について説明します。 ## 基本概念 非同期プログラミングを理解するには、まず[[tokio-basics]]を理解することから始めましょう。 実用的な[パタ",
          "position": 209,
          "original_text": "[[tokio-basics]]"
        },
        {
          "target_slug": "async-patterns",
          "link_type": "MarkdownLink",
          "context": "非同期プログラミングを理解するには、まず[[tokio-basics]]を理解することから始めましょう。 実用的な[パターン集](async-patterns)も参考になります。 ## 主要な特徴 -",
          "position": 286,
          "original_text": "[パターン集](async-patterns)"
        },
        {
          "target_slug": "hello",
          "link_type": "WikiLink",
          "context": "主要な特徴 - Future trait - async/await構文 - 非同期ランタイム [[hello]]の記事でも触れましたが、非同期処理は現代のWebアプリケーション開発において重要な概念",
          "position": 431,
          "original_text": "[[hello]]"
        }
      ],
      "inbound_count": 4,
      "processed_at": "2025-09-18T15:54:55.403261919+00:00"
    },
    {
      "slug": "test",
      "title": "Untitled",
      "content": "test\ntest\ntest\ntest\ntest\ntest\ntest\ntest\ntest\ntest\ntest\n",
      "metadata": {
        "title": "Untitled",
        "home_display": false,
        "category": null,
        "importance": 3,
        "related_articles": [],
        "tags": [],
        "created_at": null,
        "updated_at": null,
        "author_image": null
      },
      "file_path": "articles/test.md",
      "outbound_links": [],
      "inbound_count": 0,
      "processed_at": "2025-09-18T15:54:55.403350605+00:00"
    },
    {
      "slug": "broken-link-test",
      "title": "リンク切れテスト",
      "content": "\n# リンク切れテスト\n\nこの記事はリンク検証機能をテストするためのものです。\n\n## 意図的なリンク切れ\n\n以下のリンクは意図的に存在しない記事を参照しています：\n\n- [[存在しない記事]]へのwikiリンク\n- [壊れたリンク](broken-slug)へのmarkdownリンク\n\nこれらのリンクは、リンク検証システムによってエラーとして検出されるはずです。",
      "metadata": {
        "title": "リンク切れテスト",
        "home_display": false,
        "category": "test",
        "importance": 1,
        "related_articles": [
          "non-existent-article"
        ],
        "tags": [
          "test",
          "validation",
          "broken-links"
        ],
        "created_at": "2024-01-06T00:00:00Z",
        "updated_at": "2024-01-06T00:00:00Z",
        "author_image": null
      },
      "file_path": "articles/broken-link-test.md",
      "outbound_links": [
        {
          "target_slug": "存在しない記事",
          "link_type": "WikiLink",
          "context": "この記事はリンク検証機能をテストするためのものです。 ## 意図的なリンク切れ 以下のリンクは意図的に存在しない記事を参照しています： - [[存在しない記事]]へのwikiリンク - [壊れたリンク",
          "position": 226,
          "original_text": "[[存在しない記事]]"
        },
        {
          "target_slug": "broken-slug",
          "link_type": "MarkdownLink",
          "context": "以下のリンクは意図的に存在しない記事を参照しています： - [[存在しない記事]]へのwikiリンク - [壊れたリンク](broken-slug)へのmarkdownリンク これらのリンクは、リンク",
          "position": 273,
          "original_text": "[壊れたリンク](broken-slug)"
        }
      ],
      "inbound_count": 0,
      "processed_at": "2025-09-18T15:54:55.403920305+00:00"
    },
    {
      "slug": "about-khimoo",
      "title": "Khimoo",
      "content": "\n# About Khimoo\n\nSoftware developer passionate about Rust and web technologies.\n\n## Background\n\nI'm a developer who enjoys building interactive web applications and exploring the latest technologies in the Rust ecosystem. This portfolio showcases my work and thoughts on various technical topics.\n\n## Interests\n\n- Rust programming language\n- Web development with Yew\n- Interactive data visualization\n- Physics simulations\n- Modern web technologies\n\n## Contact\n\nFeel free to explore the articles and projects in this interactive mindmap portfolio. Each node represents a different aspect of my work and interests.\n\nThe articles are interconnected, showing relationships between different topics and technologies I work with.",
      "metadata": {
        "title": "Khimoo",
        "home_display": false,
        "category": "author",
        "importance": 5,
        "related_articles": [],
        "tags": [
          "about",
          "profile",
          "author"
        ],
        "created_at": "2024-01-01T00:00:00Z",
        "updated_at": "2024-01-01T00:00:00Z",
        "author_image": "https://avatars.githubusercontent.com/u/1?v=4"
      },
      "file_path": "articles/about-khimoo.md",
      "outbound_links": [],
      "inbound_count": 0,
      "processed_at": "2025-09-18T15:54:55.404118978+00:00"
    },
    {
      "slug": "web-development",
      "title": "Web開発の基礎",
      "content": "\n# Web開発の基礎\n\nフロントエンドとバックエンドの基本概念について説明します。\n\n## フロントエンド開発\n\n- HTML/CSS/JavaScript\n- モダンフレームワーク\n- レスポンシブデザイン\n\n## バックエンド開発\n\n- サーバーサイド言語\n- データベース設計\n- API設計\n\nこのポートフォリオサイト自体も、[[hello]]で紹介したように、Yewフレームワークを使用したWeb開発の実例です。",
      "metadata": {
        "title": "Web開発の基礎",
        "home_display": true,
        "category": "web",
        "importance": 3,
        "related_articles": [],
        "tags": [
          "web",
          "frontend",
          "backend",
          "development"
        ],
        "created_at": "2024-01-05T00:00:00Z",
        "updated_at": "2024-01-05T00:00:00Z",
        "author_image": null
      },
      "file_path": "articles/web-development.md",
      "outbound_links": [
        {
          "target_slug": "hello",
          "link_type": "WikiLink",
          "context": "- サーバーサイド言語 - データベース設計 - API設計 このポートフォリオサイト自体も、[[hello]]で紹介したように、Yewフレームワークを使用したWeb開発の実例です。",
          "position": 380,
          "original_text": "[[hello]]"
        }
      ],
      "inbound_count": 1,
      "processed_at": "2025-09-18T15:54:55.404590974+00:00"
    },
    {
      "slug": "tokio-basics",
      "title": "Tokio入門",
      "content": "\n# Tokio入門\n\nTokioは[[rust-async]]の基礎となる非同期ランタイムです。\n\n## Tokioの特徴\n\n- 高性能な非同期I/O\n- タスクスケジューリング\n- タイマーとタイムアウト\n\n## 基本的な使用方法\n\n```rust\n#[tokio::main]\nasync fn main() {\n    println!(\"Hello, Tokio!\");\n}\n```\n\nこの記事は[[rust-async]]と密接に関連しており、非同期プログラミングの実装面を扱います。",
      "metadata": {
        "title": "Tokio入門",
        "home_display": true,
        "category": "programming",
        "importance": 3,
        "related_articles": [],
        "tags": [
          "rust",
          "tokio",
          "async"
        ],
        "created_at": "2024-01-03T00:00:00Z",
        "updated_at": "2024-01-03T00:00:00Z",
        "author_image": null
      },
      "file_path": "articles/tokio-basics.md",
      "outbound_links": [
        {
          "target_slug": "rust-async",
          "link_type": "WikiLink",
          "context": "# Tokio入門 Tokioは[[rust-async]]の基礎となる非同期ランタイムです。 ## Tokioの特徴 - 高性能な非同期I/O",
          "position": 24,
          "original_text": "[[rust-async]]"
        },
        {
          "target_slug": "rust-async",
          "link_type": "WikiLink",
          "context": "main() { println!(\"Hello, Tokio!\"); } ``` この記事は[[rust-async]]と密接に関連しており、非同期プログラミングの実装面を扱います。",
          "position": 333,
          "original_text": "[[rust-async]]"
        }
      ],
      "inbound_count": 2,
      "processed_at": "2025-09-18T15:54:55.405359316+00:00"
    }
  ],
  "generated_at": "2025-09-18T15:54:55.405485653+00:00",
  "total_count": 9,
  "home_articles": [
    "hello",
    "rust-async",
    "web-development",
    "tokio-basics"
  ]
}